*, *::after, *::before {
box-sizing: border-box;
}

body {
    margin: 0;
}

:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9); /*mark-size is the size of X and O and we calculate to be 90% from the cell-size */
}
.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center; /*to center our bord elemen and everything inside of the board div will be centered in the board div */
    justify-items: center; /*elements X and O to be in the center of the box*/ 
    align-items: center; /*elements X and O to be align in the center, not the actual cells themselves */
    grid-template-columns: repeat(3,auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    display: flex; /*display the elements inside the cell */
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;

}


.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n + 1) {
    border-left: none;
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:last-child {
    border-bottom: none;
}

.cell:nth-child(3n + 3) {
    border-right: none;
}

.cell.x,
.cell.circle {
    cursor: not-allowed;
}

.cell.x::before, 
.cell.x::after,
.cell.circle::before,
.cell.circle::after {
    background-color: black;
}

/* hover effect to show X */
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover:before, /*when we have a board that has the circle class and a cell inside of it that is not a X and is not a Circle, whenover we hover over it we want to select the before element and change the color to lightgrey   */ 
.board.circle .cell:not(.x):not(.circle):hover:after {  /*de verificat daca se pune si pentru after */
    background-color: lightgrey;
}

/*create the X */
.cell.x::before, 
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
    content:'';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);   
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before { /*we put the not selector in order not to overwite */
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
    transform:rotate(-45deg);
}

/* create the O */
.cell.circle::before, 
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before, /*when we are on the board and has the circle class we want to get the cells inside of it that are not already an X and not already a Circle, and we want to check when we hover them to style the Before element  */ 
.board.circle .cell:not(.x):not(.circle):hover::after { /* and we want to style the After element to be exactly the same*/ 
    content:'';
    position: absolute;
    border-radius: 50%;    
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: white;
}

/*Restart button */ 
.winning-message {
    display: none;/*we don't want this to show up by default */
    position: fixed; /*we want to make sure is positined always in the center of the screen and we want to take every space so we give the fixed position */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column; /*to stack the elements verticaly */

}

.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show {
    display: flex;
}
